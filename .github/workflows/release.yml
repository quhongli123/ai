  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        runner: [macos-latest, ubuntu-latest]
        arch: [amd64, arm64]
        include:
          - runner: macos-latest
            arch: arm64
            target: aarch64-apple-darwin
          - runner: macos-latest
            arch: amd64
            target: x86_64-apple-darwin
          - runner: ubuntu-latest
            arch: amd64
            target: x86_64-unknown-linux-gnu
          - runner: ubuntu-latest
            arch: arm64
            target: aarch64-unknown-linux-gnu

    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        working-directory: src-tauri

    steps:
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Get pnpm store directory
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v1

      - name: Install system dependencies (Ubuntu only)
        if: matrix.runner == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV

      - name: Install dependencies and build app
        run: |
          if [ "${{ matrix.runner }}" = "ubuntu-latest" ] && [ "${{ matrix.arch }}" = "arm64" ]; then
            cargo install cross
            cross build --release --target=${{ matrix.target }}
          else
            pnpm install
            pnpm tauri build --target ${{ matrix.target }}
          fi

      - name: Rename artifacts
        run: |
          cd src-tauri/target/${{ matrix.target }}/release/bundle
          if [ -d "appimage" ]; then
            mv appimage/*.AppImage appimage/app_${{ matrix.arch }}.AppImage
            cd appimage && tar -czf app_${{ matrix.arch }}.AppImage.tar.gz app_${{ matrix.arch }}.AppImage
          elif [ -d "deb" ]; then
            mv deb/*.deb deb/app_${{ matrix.arch }}.deb
          elif [ -d "dmg" ]; then
            mv dmg/*.dmg dmg/app_${{ matrix.arch }}.dmg
          elif [ -d "macos" ]; then
            mv "macos/AI 学院.app" "macos/app.app"
            cd macos && tar -czf app.app.tar.gz app.app
          fi

      - uses: tauri-apps/tauri-action@v0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}
          includeDebugArtifacts: true
          releaseDraft: false
          prerelease: false
          publish: true
