name: Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: 'See the assets to download this version.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    needs: create-release
    strategy:
      matrix:
        include:
          - platform: macos-latest
            target: x86_64-apple-darwin
            arch: amd64
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: amd64
          - platform: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            arch: arm64
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev:arm64 \
            webkit2gtk-4.0:arm64 \
            libappindicator3-dev:arm64 \
            librsvg2-dev:arm64 \
            patchelf \
            libjavascriptcoregtk-4.1-dev:arm64 \
            libwebkit2gtk-4.1-dev:arm64 \
            gcc-aarch64-linux-gnu

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v1

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build application
        run: |
          pnpm install
          pnpm tauri build --target ${{ matrix.target }}

      - name: Package artifact
        run: |
          cd src-tauri/target/${{ matrix.target }}/release/bundle/
          if [ "${{ matrix.platform }}" == "macos-latest" ]; then
            cd dmg
            tar -czf app_${{ needs.create-release.outputs.version }}_macos.dmg.tar.gz *.dmg
          elif [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            cd appimage
            tar -czf app_${{ needs.create-release.outputs.version }}_linux_${{ matrix.arch }}.AppImage.tar.gz *.AppImage
          fi

      - name: Upload artifact
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/**/bundle/**/app_*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}