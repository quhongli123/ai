name: Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v2
      - name: Query version number
        id: get_version
        run: |
          echo "using version tag ${GITHUB_REF:10}"
          echo "version=${GITHUB_REF:10}" >> "$GITHUB_OUTPUT"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ steps.get_version.outputs.version }}'
          release_name: 'app ${{ steps.get_version.outputs.version }}'
          body: 'See the assets to download this version and install.'
          draft: false
          prerelease: false

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev
      - name: Install rsw
        run: cargo install rsw
      - name: Build App
        run: pnpm install && pnpm pubhome
      - name: Rename and Package
        run: |
          cd src-tauri/target/release/bundle
          if [ "${{ matrix.platform }}" == "macos-latest" ]; then
            mv "macos/AI 学院.app" "macos/app.app"
            mv "dmg/AI 学院_0.1.0_aarch64.dmg" "dmg/app_0.1.0_arm64.dmg"
            cd macos && tar -czf app.app.tar.gz app.app
          elif [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            mv "deb/AI 学院_0.1.0_amd64.deb" "deb/app_0.1.0_amd64.deb"
            mv "appimage/AI 学院_0.1.0_amd64.AppImage" "appimage/app_0.1.0_amd64.AppImage"
            cd appimage && tar -czf app_0.1.0_amd64.AppImage.tar.gz app_0.1.0_amd64.AppImage
          fi

  build-arm64:
    name: Build Linux ARM64
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in ARM64 environment
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: arm64v8/debian:bullseye-slim
          cpu: cortex-a53
          commands: |
            apt-get update
            apt-get install -y curl libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf \
              libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev build-essential pkg-config
            curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
            apt-get install -y nodejs
            npm install -g pnpm
            pnpm install
            cargo install rsw
            pnpm pubhome
            cd src-tauri/target/release/bundle/appimage
            tar -czf app_arm64.AppImage.tar.gz *.AppImage
      - name: Upload arm64 artifact
        uses: softprops/action-gh-release@v1
        with:
          files: src-tauri/target/release/bundle/appimage/app_arm64.AppImage.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
