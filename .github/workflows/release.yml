name: Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: 'See the assets to download this version.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    needs: create-release
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev \
            patchelf libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: Install and build
        run: |
          pnpm install
          pnpm pubhome

      - name: Package artifact
        run: |
          cd src-tauri/target/release/bundle
          if [ "${{ matrix.platform }}" == "macos-latest" ]; then
            cd dmg
            tar -czf app_${{ needs.create-release.outputs.version }}_macos.dmg.tar.gz *.dmg
          elif [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            cd appimage
            tar -czf app_${{ needs.create-release.outputs.version }}_linux_amd64.AppImage.tar.gz *.AppImage
          fi

      - name: Upload artifact
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/**/app_*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-arm64:
    name: Build Linux ARM64
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build in ARM64 container
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${{ github.workspace }}:/build"
          setup: |
            apt-get update && apt-get install -y curl build-essential pkg-config \
              libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev \
              libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev \
              nodejs npm
            curl -fsSL https://get.pnpm.io/install.sh | sh -
          run: |
            export PATH="/root/.local/share/pnpm:$PATH"
            cd /build
            pnpm install
            pnpm pubhome
            cd src-tauri/target/release/bundle/appimage
            tar -czf app_${{ needs.create-release.outputs.version }}_linux_arm64.AppImage.tar.gz *.AppImage

      - name: Upload ARM64 artifact
        uses: softprops/action-gh-release@v1
        with:
          files: src-tauri/target/release/bundle/appimage/app_${{ needs.create-release.outputs.version }}_linux_arm64.AppImage.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
